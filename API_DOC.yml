openapi: 3.0.0
info:
  title: HNG Stage 2 endpoint definition
  description: API endpoints for stage 2 task
  version: 1.0.0

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Create an account for a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: Garfield
                last_name:
                  type: string
                  example: Shenko
                email:
                  type: string
                  example: garfield.shenko@gmail.com
                password:
                  type: string
                  example: 12345
                phone:
                  type: string
                  example: 07060470281
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '422':
          description: User is missing one or more required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: First name is required
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Account with the provided email already exists
        
    
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Logs a registered user in.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: garfield.skuk@gmail.com
                password:
                  type: string
                  example: 12345
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
        '422':
          description: 'Missing fields'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: One or more required is fileds missing
        '401':
          description: 'Unauthorised'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credential provided
  
  /api/change-password:
    post:
      tags:
        - Account management
      summary: Updates a logged in user's password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password changed successfully
        '422':
          description: Wrong password entered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Incorrect password entered
  
  /api/profile:
    get:
      tags:
        - Account management
      summary: User profile
      security:
        - bearerAuth: []
      description: This endpoint returns the details of the currently logged in user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                      last_name:
                        type: string
                      email:
                        type: string
                      address:
                        type: string
                      phone:
                        type: string
  
  /api/organisation:
    post:
      tags:
        - Organisation
      summary: Create organisation
      security:
        - bearerAuth: []
      description: Creates a new organistation for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Golf lovers
                description:
                  type: string
                  example: Association for lovers of golf game
              required:
                - name
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Organisation created successfully
        '422':
          description: Missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Name is required to create an organisation
  
    get:
      tags:
        - Organisation
      summary: Get all user's organisations
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: creator
          schema:
            type: boolean
          description: Returns only organisation a user created if true, only organisations where user is a member if false, all organisations if not specified.
      description: Return all organisations a user is part of including both the user creates and others
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Fetched organisation successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Impala golden
                        description:
                          type: string
                          example: Resurrecting faith in mankind
                        creator:
                          type: boolean
                          example: false

    patch:
      tags:
        - Organisation
      security:
        - bearerAuth: []
      summary: Update organisation details
      description: Update details of an orgasnisation a user created
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Success
      

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  